- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'

- platform: uptime

- platform: template
  sensors:
    living_set_temperature:
      unit_of_measurement: '°'
      value_template: "{{ state_attr('climate.living', 'temperature') }}"
    
    kitchen_set_temperature:
      unit_of_measurement: '°'
      value_template: "{{ state_attr('climate.kitchen', 'temperature') }}"

    bathroom_set_temperature:
      unit_of_measurement: '°'
      value_template: "{{ state_attr('climate.bathroom', 'temperature') }}"

    bedroom_set_temperature:
      unit_of_measurement: '°'
      value_template: "{{ state_attr('climate.bedroom', 'temperature') }}"

    storage_set_temperature:
      unit_of_measurement: '°'
      value_template: "{{ state_attr('climate.storage', 'temperature') }}"

    office_set_temperature:
      unit_of_measurement: '°'
      value_template: "{{ state_attr('climate.office', 'temperature') }}"

    guestroom_set_temperature:
      unit_of_measurement: '°'
      value_template: "{{ state_attr('climate.guestroom', 'temperature') }}"

    alarm:
      friendly_name: "Wekker vandaag"
      value_template: >-
        {% if is_state('input_boolean.vacation', 'on') or is_state('binary_sensor.workday_sensor', 'off')  %}
          {{ states('input_datetime.alarm_dayoff') }}
        {%- else -%}
          {{ states('input_datetime.alarm_workday') }}
        {% endif %}

    bedtime:
      friendly_name: "Bedtijd vandaag"
      value_template: >-
        {% if is_state('input_boolean.vacation', 'on') or is_state('binary_sensor.workday_sensor', 'off')  %}
          {{ states('input_datetime.bedtime_dayoff') }}
        {%- else -%}
          {{ states('input_datetime.bedtime_workday') }}
        {% endif %}

    day_phase:
      friendly_name: "Fase van de dag"
      value_template: >-
        {% if states.group.persons_all.state == "not_home" %}
          Away
        {% elif states.input_boolean.do_not_disturb.state == "on" %}
          Sleeping
        {% elif states.input_boolean.vacation.state == "on" or states.binary_sensor.workday_sensor.state == "off" %}
          {% if states.sensor.time.state < states.sensor.bedtime.state %}
            Leisure
          {% else %}
            Bedtime
          {% endif %}
        {% else %}
          {% if states.sensor.time.state < states.input_datetime.workday_start.state %}
            Waking
          {% elif states.sensor.time.state >= states.input_datetime.workday_start.state and states.sensor.time.state < states.input_datetime.workday_stop.state %}
            Working
          {% elif states.sensor.time.state >= states.input_datetime.workday_stop.state and states.sensor.time.state < states.sensor.bedtime.state %}
            Leisure
          {% else %}
            Bedtime
          {% endif %}
        {% endif %}
    
    photos_last_backup:
      value_template: "{{ strptime(states.sensor.command_photosbackup.state, '%d/%m/%y_%H:%M:%S_%z').strftime('%Y-%m-%dT%H:%M:%S%z') }}"
      device_class: timestamp

    mail_last_backup:
      value_template: "{{ strptime(states.sensor.command_mailbackup.state, '%d/%m/%y_%H:%M:%S_%z').strftime('%Y-%m-%dT%H:%M:%S%z') }}"
      device_class: timestamp

- platform: command_line
  name: command_photosbackup
  command: !secret command_photosbackup

- platform: command_line
  name: command_mailbackup
  command: !secret command_mailbackup